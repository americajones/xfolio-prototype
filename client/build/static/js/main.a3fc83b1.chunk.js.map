{"version":3,"sources":["utils/actions.js","utils/GlobalState.js","utils/API.js","components/Login.js","components/Signup.js","components/Upload.js","components/Post.js","components/NewPost.js","components/Blog.js","components/Gallery.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","Provider","reducer","state","action","type","_id","username","password","initialState","nickname","journal","works","favorites","uploaded","UserProvider","value","props","useReducer","dispatch","useUserContext","useContext","axios","get","newUser","post","email","login","newArt","newPost","granimColor","gradients","transitionSpeed","granimImg","source","blendingMode","Login","useState","setState","nameRef","useRef","passRef","handleChange","current","console","log","className","name","placeholder","onChange","ref","onClick","e","preventDefault","API","then","user","data","window","location","assign","catch","err","to","isPausedWhenNotInView","image","states","id","Signup","signUp","setSignUp","emailRef","Upload","message","file","url","fileState","setFileState","title","postBody","tags","artState","setArtState","imgRef","titleRef","bodyRef","tagsRef","uploadedImg","host","handlePost","userId","src","prettyTags","split","map","tag","trim","replace","class","htmlFor","accept","files","length","reader","FileReader","onload","target","result","readAsDataURL","contentType","generatePutUrl","options","params","Key","Date","now","ContentType","headers","res","put","config","generateGetUrl","alt","width","Posts","key","body","NewPost","postState","setPostState","Blog","toString","useEffect","Post","Gallery","worksState","setWorksState","img","description","App","loggedIn","isLoggedIn","setIsLoggedIn","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a3fc83b1.chunk.js","sourcesContent":["export const ADD_JOURNAL_POST = 'ADD_JOURNAL_POST';\nexport const UPDATE_JOURNAL = 'UPDATE_JOURNAL';\nexport const REMOVE_JOURNAL_POST = 'REMOVE_JOURNAL_POST';\nexport const SET_CURRENT_POST = 'SET_CURRENT_POST';\n // artwork actions\nexport const ADD_ARTWORK = 'ADD_ARTWORK';\nexport const UPDATE_ARTWORK = 'UPDATE_ARTWORK';\nexport const REMOVE_ARTWORK = 'REMOVE_ARTWORK';\nexport const SET_CURRENT_ARTWORK = 'SET_CURRENT_ARTWORK';\n // user actions\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\n // favoriting actions\nexport const ADD_FAVE = 'ADD_FAVE';\nexport const REMOVE_FAVE = 'REMOVE_FAVE';\nexport const UPDATE_CURRENT_FAVE = 'UPDATE_CURRENT_FAVE';\n\nexport const GALLERY_PROPS = 'GALLERY_PROPS';\nexport const POST_PROPS = 'POST_PROPS'\n\n","import React, { createContext, useReducer, useContext } from 'react';\n\nimport { SET_CURRENT_USER, LOGIN_USER, ADD_USER, GALLERY_PROPS } from './actions';\n\nconst UserContext = createContext();\nconst { Provider } = UserContext;\n\nconst reducer = (state, action) => {\n    // console.log('action object', action.type) // console logs the action object with all the info I need to store\n    // const { type, _id, username, nickname, journal, works, favorites, password } = action;\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            // console.log('action inside SET CURRENT', action);\n            return {\n                ...state,\n                type: action.type,\n                _id: action._id,\n                username: action.username,\n                // nickname,\n                // journal,\n                // works,\n                // favorites,\n                password: '',\n            }\n        case LOGIN_USER:\n            return {\n                ...action\n            };\n        case ADD_USER: \n            return {\n                ...action\n            };\n        case GALLERY_PROPS:\n            return {\n                ...state,\n                ...action            }\n        default:\n            return state;\n    }\n};\n\nlet initialState = {\n    type: '',\n    _id: '0',\n    username: '',\n    nickname: '',\n    journal: [],\n    works: [],\n    favorites: [],\n    password: '',\n    uploaded: false,\n    // loggedIn: false\n};\n\nconst UserProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    // console.log('UserProvider props', props);\n    return <Provider value={[state, dispatch]} {...props} />\n};\n\nconst useUserContext = () => {\n    return useContext(UserContext);\n};\n\nexport { UserProvider, useUserContext };","import axios from 'axios';\n\nexport default {\n    // getUsers: function () {\n    //     return axios.get('/api/user');\n    // },\n    getUser: function (username) {\n        // console.log(username)\n        return axios.get('/api/user/' + username)\n    },\n    registerUser: function (newUser) {\n        return axios.post('/api/user', {\n            username: newUser.username,\n            password: newUser.password,\n            email: newUser.email\n        })\n    },\n    login: function (login) {\n        return axios.post('/api/user/login', {\n            username: login.username,\n            password: login.password\n        })\n    },\n    logout: function () {\n        return axios.post(\"/api/user/logout\");\n    },\n    status: function () {\n        return axios.get('/api/user');\n    },\n    postArt: (newArt) => {\n        return axios.post('/api/artwork', newArt);\n    },\n    getArt: (username) => {\n        return axios.get('/api/artwork' + username)\n    },\n    postJournal: (newPost) => {\n        return axios.post('/api/blog', newPost);\n    },\n    getJournal: (username) => {\n        return axios.get('/api/blog/' + username)\n    }\n}","import React, { useRef, useState } from 'react';\nimport API from '../utils/API'\nimport Granim from 'react-granim';\nimport { Link } from 'react-router-dom';\n\n\n// initialize granim\nconst granimColor = ({   \"default-state\": {\n    gradients: [\n        ['#29323c', '#485563'],\n        ['#FF6B6B', '#556270'],\n        ['#80d3fe', '#7ea0c4'],\n        ['#f0ab51', '#eceba3']\n    ],\n    transitionSpeed: 7000}});\n\n// set granim image\nconst granimImg = ({source: '../images/bg.jpeg', blendingMode: 'multiply'});\n\n// login component\nconst Login = () => {\n    // setting up our state\n    const [state, setState] = useState({\n        username: '',\n        password: ''\n    });\n\n    // our element references\n    const nameRef = useRef();\n    const passRef = useRef();\n\n    // handle input change function\n    const handleChange = () => {\n        // variables to dispatch\n        const username = nameRef.current.value;\n        const password = passRef.current.value;\n        // const type = LOGIN_USER;\n\n        // dispatch to our global state\n        setState({\n            // ...state,\n            // type,\n            username,\n            password\n        })\n    };\n    console.log('state', state);\n\n    // posts user data to the api to validate against the database\n    const handleLogin = (e) => {\n        e.preventDefault();\n        const login = {\n            username: state.username,\n            password: state.password\n        }\n        console.log('components/Login.js login', login)\n        API.login(login)\n            .then((user) => {\n                console.log('Login.js api.login() result', user.data.username);\n                window.location.assign(`/${user.data.username}/gallery`);\n            }).catch(err => console.log(err));\n    };\n\n    return (\n        <div className=\"login-page\">\n            <div className=\"container login\">\n                <div>\n                    <form>\n                        <div>\n                            <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} ref={nameRef} />\n                    </div>\n                    <div>\n                        <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                        </div>\n                        <div>\n                            <button name=\"login\" onClick={handleLogin}>sign in</button>\n                        </div>\n                    </form>\n                </div>\n                <Link to=\"/Signup\"><p>New to Xfolio? Sign up here</p></Link>\n            </div>\n          <Granim isPausedWhenNotInView =\"true\" image= {granimImg} states = {granimColor} id=\"canvas-image\" />\n       </div>\n    )\n}\n\nexport default Login;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState'\nimport API from '../utils/API'\nimport { SET_CURRENT_USER, ADD_USER } from '../utils/actions';\nimport Granim from 'react-granim';\nimport { Link } from 'react-router-dom';\n\n\nconst granimColor = ({   \"default-state\": {\n    gradients: [\n        ['#e5ff00', '#485563'],\n        ['#FF6B6B', '#556270'],\n        ['#80d3fe', '#7ea0c4'],\n        ['#f0ab51', '#eceba3']\n    ],\n    transitionSpeed: 7000}});\n    \nconst granimImg = ({source: '../images/bg.jpeg', blendingMode: 'multiply'});\n\n\nconst Signup = () => {\n\n    const [state, dispatch] = useUserContext();\n    const [signUp, setSignUp] = useState({});\n\n    // const [userLogin, setUserLogin] = useState();\n\n    console.log(\"state\", state);\n\n    const emailRef = useRef();\n    const nameRef = useRef();\n    const passRef = useRef();\n\n    const handleChange = () => {\n        const email = emailRef.current.value;\n        const username = nameRef.current.value;\n        const password = passRef.current.value;\n\n        setSignUp({\n            // type: ADD_USER,\n            username: username,\n            password: password,\n            email: email\n        })\n\n        // setState\n        // console.log('state after login', state)\n    }\n\n    const handleSignup = (e) => {\n        e.preventDefault();\n        const newUser = {\n            email: signUp.email,\n            username: signUp.username,\n            password: signUp.password\n        }\n        console.log('components/Signup.js sign up', newUser)\n        API.registerUser(newUser)\n            .then((user) => {\n                console.log('Signup.js api.signup() result', user.data);\n                // const userData = user.data;\n                // setSignUp({\n                //     _id: userData._id,\n                //     username: userData.username\n                // })\n                \n                API.login({ username: signUp.username, password: signUp.password })\n                    .then(user => {\n                        console.log('user data after post to api/login from signup', user.data)\n                        dispatch({\n                            ...state,\n                            type: SET_CURRENT_USER,\n                            username: user.data.username,\n                            _id: user.data._id,\n                            // loggedIn: true\n                    })\n                })\n                    // window.location.assign(`${signUp.username}/gallery`)\n            })\n                .catch(err => {\n                    if (err) console.log('components/Signup.js error', err);\n                })\n        }\n\n    return (\n        <div className=\"signup-page\">\n            <div className=\"container login signup\">\n                <div>\n                    <form>\n                        <div>\n                            <p>Sign up:</p>\n                            <input type=\"text\" name=\"email\" placeholder=\"email\" onChange={handleChange} ref={emailRef} />\n                    </div>\n                        <div>\n                            <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} ref={nameRef} />\n                    </div>\n                    <div>\n                        <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                        </div>\n                        <div>\n                            <button name=\"signup\" onClick={handleSignup}>sign up</button>\n                            <br />\n                        </div>\n                    </form>\n                </div>\n                <Link to=\"/Login\"><p>Already have an account? Log in here</p></Link>\n            </div>\n          <Granim isPausedWhenNotInView =\"true\" image= {granimImg} states = {granimColor} id=\"canvas-image\" />\n       </div>\n    )\n}\n\nexport default Signup;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState'\nimport { useHistory } from 'react-router-dom';\n// import API from '../utils/API'\nimport axios from 'axios';\nimport API from '../utils/API';\n\nconst Upload = () => {\n\n    const [state, dispatch] = useUserContext();\n    // console.log('state in upload', state)\n    // const history = useHistory();\n    // console.log('state in upload', state)\n\n    const [fileState, setFileState] = useState({\n        message: '',\n        file: '',\n        url: ''\n    });\n\n    const [artState, setArtState] = useState({\n        title: '',\n        postBody: '',\n        tags: []\n    });\n    \n    // console.log('artState', artState)\n\n    const imgRef = useRef();\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n    const uploadedImg = useRef();\n\n    // dynamic host for putting/getting images to/from bucket\n    const host = window.location.host;\n\n    const getImage = e => {\n        e.preventDefault();\n        const files = imgRef.current.files;\n        // console.log(files);\n        if (files && files.length > 0) {\n            const file = files[0];\n            setFileState({ ...fileState, file });\n            const reader = new FileReader();\n            const { current } = uploadedImg;\n            current.file = file;\n            reader.onload = e => {\n                // console.log(e.target.result)\n                current.src = e.target.result;\n            };\n            reader.readAsDataURL(file);\n        };\n    };\n\n    // console.log('img upload state:', fileState);\n\n    const uploadFile = e => {\n        e.preventDefault();\n        const { file } = fileState;\n        setFileState({ ...fileState, message: 'Uploading...' });\n        // console.log('file.type', file.type);\n        const contentType = file.type;\n\n        const generatePutUrl = `https://${host}/generate-put-url`;\n        // console.log('generatePutUrl', generatePutUrl)\n        const options = {\n            params: {\n                Key: `${state.username}/works/${Date.now()}_${file.name}`,\n                ContentType: contentType\n            },\n            headers: {\n                'Content-Type': contentType\n            }\n        };\n\n        axios.get(generatePutUrl, options)\n            .then(res => {\n                // console.log('res.data', res.data)\n                const { data } = res;\n                // console.log('put url from res.data', data);\n\n                axios.put(data, file, options)\n                    .then((res) => {\n                        // console.log('put file', res.config.params);\n                        setFileState({ ...fileState, message: 'Upload Successful' });\n\n                        const params = res.config.params;\n                        const generateGetUrl = `https://${host}/generate-put-url`\n                        const options = {params};\n\n                        axios.get(generateGetUrl, options)\n                            .then(res => {\n                                const { data } = res;\n                                const url = data.replace(/\\?.*/, '');\n                                // console.log(trimData);\n                                setFileState({ ...fileState, url })\n\n                                handlePost(url);\n                            })\n                    })\n                    .catch(err => {\n                        setFileState({ ...fileState, message: 'Something went wrong, try again' });\n                        console.log('err', err);\n                    });\n            });\n    };\n\n    const handlePost = (url) => {\n        const { title, postBody, tags } = artState;\n        const { _id } = state;\n        // console.log('_id in handlePost', _id)\n        const newArt = {\n            userId: _id,\n            url,\n            title,\n            postBody,\n            tags\n        };\n\n        API.postArt(newArt);\n        dispatch({\n            ...state,\n            uploaded: true\n        })\n        uploadedImg.current.src = '';\n        titleRef.current.value = '';\n        bodyRef.current.value = '';\n        tagsRef.current.value = '';\n        // window.location.assign('gallery')\n    }\n\n\n    const handleChange = e => {\n        e.preventDefault();\n        const title = titleRef.current.value;\n        const postBody = bodyRef.current.value;\n        const tags = tagsRef.current.value.split(',');\n        const prettyTags = tags.map(tag => {\n            const trimTag = tag.trim();\n            const regex = /\\s+/g;\n            const underscoreTag = trimTag.replace(regex, '_')\n            return underscoreTag;\n        });\n\n        // console.log('prettyTags', prettyTags);\n\n        setArtState({\n            ...artState,\n            title,\n            postBody,\n            tags: prettyTags\n        })\n    }\n    \n    return (\n        <div className=\"container upload\">\n            <form class=\"upload-box\">\n                <div class=\"upload-info\">\n                <div>\n                    <label htmlFor=\"upload\">Choose an image</label>\n                    <input id=\"upload-file\" type=\"file\" name=\"upload\" accept=\"image/*\" onChange={getImage} ref={imgRef} />\n                </div>\n                <div class=\"upload-mess\">\n                    {fileState.message}\n                </div>\n                <div>\n                   <p> Title: </p>\n                    <input type=\"text\" name=\"title\" ref={titleRef} onChange={handleChange} />\n                </div>\n                <div>\n                   <p>Description:</p>\n                    <textarea name=\"body\" ref={bodyRef} onChange={handleChange} />\n                </div>\n                <div>\n                    <p>Tags, separated by a comma:</p>\n                    <input type=\"text\" name=\"tags\" ref={tagsRef} onChange={handleChange} />\n                </div>\n                <div>\n                    <button onClick={uploadFile}>Submit</button>\n                </div>\n                </div>\n                    <div class=\"upload-prev\">\n                        <img ref={uploadedImg} alt=\"preview\" width=\"140px\" />\n                    </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Upload;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useUserContext } from '../utils/GlobalState';\n// import API from '../utils/API';\n\nconst Posts = () => {\n    const [state] = useUserContext();\n\n    // const url = window.location.toString().split('/');\n\n    const { journal } = state;\n    if (!journal.length) {\n        return (\n            <div>\n                <h3>You don't have any posts yet</h3>\n                <Link to='gallery'>Gallery Page</Link>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                {journal.map(post => (\n                    <div key={post.title}>\n                        <h2>{post.title}</h2>\n                        <div>\n                            {post.body}\n                        </div>\n                        <div>\n                            {post.tags}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default Posts;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport { GALLERY_PROPS } from '../utils/actions';\n\nconst NewPost = () => {\n    const [state, dispatch] = useUserContext();\n    const [postState, setPostState] = useState();\n\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n\n    const handleChange = e => {\n        e.preventDefault();\n        \n        const title = titleRef.current.value;\n        const body = bodyRef.current.value;\n        const tags = tagsRef.current.value.split(',');\n        const tag = tags.map(tag => {\n            const trimTag = tag.trim();\n            const regex = /\\s+/g;\n            const underscoreTag = trimTag.replace(regex, '_')\n            return underscoreTag;\n        })\n        \n        console.log({ title: title, body: body, tags: [tag] })\n        setPostState({\n            title,\n            body,\n            tags: tag\n        })\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const { title, body, tags } = postState;\n        const { _id } = state;\n        const newPost = {\n            userId: _id,\n            title,\n            body,\n            tags\n        };\n\n        API.postJournal(newPost)\n            // .then(post => {\n                // console.log('new post in NewPost.js result', post)\n                dispatch({\n                    ...state,\n                    type: GALLERY_PROPS,\n                    uploaded: true,\n                    // journal: post.data.journal\n                }\n               )\n        //    })\n    }\n\n    console.log('postState', postState);\n\n    return (\n        <div>\n            <form onChange={handleChange}>\n                <div>\n                    <input type=\"text\" name=\"title\" placeholder=\"Post Title\" ref={titleRef} />\n                </div>\n                <div>\n                    <textarea name=\"body\" placeholder=\"What's up buttercup?\" ref={bodyRef} />\n                </div>\n                <div>\n                    <input type=\"text\" name=\"tags\" placeholder=\"separate tags with commas, like, this\" ref={tagsRef} />\n                </div>\n                <div>\n                    <button name=\"submit\" onClick={handleSubmit}>Submit Post</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default NewPost;","import React, { useEffect } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Posts from './Post';\nimport NewPost from './NewPost';\nimport { GALLERY_PROPS } from '../utils/actions';\nimport API from '../utils/API'\n\nconst Blog = (props) => {\n    const [state, dispatch] = useUserContext();\n    console.log('props in blog', props)\n    // console.log()\n    \n    const url = window.location.toString().split('/');\n    console.log('url', url[3])\n    \n    useEffect(() => {\n        API.getJournal(url[3])\n           .then(res => {\n                console.log('no props res', res.data)\n                dispatch({\n                    ...state,\n                    _id: res.data._id,\n                    type: GALLERY_PROPS,\n                    journal: res.data.journal,\n                    uploaded: false\n                })\n           })\n           .catch(err => console.log('err', err))\n        }, [state.uploaded]);\n    \n        console.log('state', state);\n        \n        return (\n            <div className=\"container blog\">\n            <div>\n                <h1>Hello {props.username}!</h1>\n            </div>\n            <NewPost />\n            <Posts />\n        </div>\n    )\n};\n\nexport default Blog;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport Upload from './Upload'\nimport { GALLERY_PROPS } from '../utils/actions';\n\n\nconst Gallery = props => {\n    const [state, dispatch] = useUserContext();\n    const [worksState, setWorksState] = useState({\n        works: []\n    });\n    \n    \n\n    // const history = useHistory();\n    console.log('props in gallery', props)\n    // const uploadLink =  history.push(`/upload`)\n    console.log('state', state)\n\n    useEffect(() => {\n        console.log('props', props._id)\n        API.getUser(props.username)\n            .then(res => {\n                console.log('gallery get res', res.data)\n                setWorksState({\n                    works: res.data.works\n                });\n                dispatch({\n                    ...state,\n                    type: GALLERY_PROPS,\n                    username: res.data.username,\n                    _id: res.data._id\n                })\n             })\n    }, [props, state.uploaded])\n\n    \n    // console.log('worksState', worksState.works)\n    const { works } = worksState;\n    console.log('works', works)\n\n    if (!works || !works.length) {\n        return (\n            <div>\n                <Upload />\n                <h3>No posts yet!</h3>\n                {/* <Link to={'upload'}>Upload an image</Link>\n                <br /> */}\n                <Link to={'blog'}>Go to your blog page</Link>\n            </div>\n        )\n    } else {\n        return (\n\n          <div class=\"gallery-box\">\n                <div class =\"profile\">\n                    <p>Welcome to Xfolio:</p>\n                <Upload />\n\n                <br />\n\n                <Link to={'blog'}>Go to your Jounral</Link>\n                </div>\n                <div class=\"gallery\">\n                {works.map(post => (\n                    <div class=\"gall\" key={post._id}>\n                        <div class=\"gall-thumb\">\n                            <img src={post.img} alt={post.title} />\n                        </div>\n                        <div class=\"gall-info\">\n                        <div>\n                            <i>{post.title}</i>\n                        </div>\n                        <div class=\"gall-descrip\">\n                            {post.description}\n                        </div>\n                        <div class=\"gall-tags\">\n                            {post.tags}\n                        </div>\n                        </div>\n                    </div>\n\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Gallery;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { UserProvider } from './utils/GlobalState'\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Upload from './components/Upload';\nimport Blog from './components/Blog';\nimport Gallery from './components/Gallery'\nimport API from './utils/API';\n\n\nconst App = () => {  \n\n  const [isLoggedIn, setIsLoggedIn] = useState({\n    loggedIn: false,\n    username: '',\n    _id: ''\n  });\n\n  console.log('isLoggedIn state', isLoggedIn)\n\n  useEffect(() => {\n    API.status()\n      .then(res => {\n        // if (res.data.user) {\n          console.log('res in App.js useEffect', res.data)\n          setIsLoggedIn({\n            loggedIn: true,\n            username: res.data.user[0].username,\n            _id: res.data.user[0]._id\n          });\n        // } else {\n        //   return;\n        // }\n      })\n      .catch(e => {\n        console.log('error', e)\n      })\n  }, [])\n  \n  \n  const { loggedIn, username, _id } = isLoggedIn;\n  // if (loggedIn) {\n  //   return window.location.assign(`/${username}/gallery`)\n  // }\n  return (\n  <UserProvider>\n    <Router>\n      <Switch>\n        <Route exact path='/' component={Login} />\n        <Route exact path='/Login' component={Login} />\n        <Route exact path='/Signup' component={Signup} />\n        <Route exact path='/:username/blog'>\n          <Blog loggedIn={loggedIn} username={username} _id={_id} />\n        </Route>\n        {/* <Route exact path='/:username/upload'>\n          <Upload loggedIn={loggedIn} username={username} _id={_id} />\n        </Route> */}\n        <Route exact path ='/:username/gallery'>\n          <Gallery loggedIn={loggedIn} username={username} _id={_id} />\n        </Route>\n      </Switch>\n    </Router>\n  </UserProvider>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}